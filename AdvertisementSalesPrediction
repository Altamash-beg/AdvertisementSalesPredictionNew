{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":12847928,"sourceType":"datasetVersion","datasetId":8126153}],"dockerImageVersionId":31089,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.054055Z","iopub.execute_input":"2025-08-26T18:53:08.054325Z","iopub.status.idle":"2025-08-26T18:53:08.088237Z","shell.execute_reply.started":"2025-08-26T18:53:08.054300Z","shell.execute_reply":"2025-08-26T18:53:08.087298Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df = pd.read_csv(r\"/kaggle/input/advertisingsalesprediction/advertising.csv\")\ndf.head(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.089330Z","iopub.execute_input":"2025-08-26T18:53:08.089694Z","iopub.status.idle":"2025-08-26T18:53:08.145045Z","shell.execute_reply.started":"2025-08-26T18:53:08.089663Z","shell.execute_reply":"2025-08-26T18:53:08.144107Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"      TV  Radio  Newspaper  Sales\n0  230.1   37.8       69.2   22.1\n1   44.5   39.3       45.1   10.4\n2   17.2   45.9       69.3   12.0\n3  151.5   41.3       58.5   16.5\n4  180.8   10.8       58.4   17.9","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TV</th>\n      <th>Radio</th>\n      <th>Newspaper</th>\n      <th>Sales</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>230.1</td>\n      <td>37.8</td>\n      <td>69.2</td>\n      <td>22.1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>44.5</td>\n      <td>39.3</td>\n      <td>45.1</td>\n      <td>10.4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>17.2</td>\n      <td>45.9</td>\n      <td>69.3</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>151.5</td>\n      <td>41.3</td>\n      <td>58.5</td>\n      <td>16.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>180.8</td>\n      <td>10.8</td>\n      <td>58.4</td>\n      <td>17.9</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.145937Z","iopub.execute_input":"2025-08-26T18:53:08.146213Z","iopub.status.idle":"2025-08-26T18:53:08.153728Z","shell.execute_reply.started":"2025-08-26T18:53:08.146192Z","shell.execute_reply":"2025-08-26T18:53:08.152804Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"TV           0\nRadio        0\nNewspaper    0\nSales        0\ndtype: int64"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"x1 = df[[\"TV\",\"Radio\",\"Newspaper\"]]\ny1 = df[\"Sales\"]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.156967Z","iopub.execute_input":"2025-08-26T18:53:08.157249Z","iopub.status.idle":"2025-08-26T18:53:08.178443Z","shell.execute_reply.started":"2025-08-26T18:53:08.157228Z","shell.execute_reply":"2025-08-26T18:53:08.177509Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx1_train , x1_test , y1_train ,y1_test = train_test_split(x1 , y1 ,test_size = 0.20,random_state=52)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:54:03.315648Z","iopub.execute_input":"2025-08-26T18:54:03.315948Z","iopub.status.idle":"2025-08-26T18:54:03.322641Z","shell.execute_reply.started":"2025-08-26T18:54:03.315929Z","shell.execute_reply":"2025-08-26T18:54:03.321614Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\n\nlr = LinearRegression()\nlr.fit(x1_train,y1_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.498257Z","iopub.execute_input":"2025-08-26T18:53:08.499150Z","iopub.status.idle":"2025-08-26T18:53:08.635822Z","shell.execute_reply.started":"2025-08-26T18:53:08.499105Z","shell.execute_reply":"2025-08-26T18:53:08.634941Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"LinearRegression()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":8},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"lr.score(x1_test,y1_test)*1000","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T19:02:49.235497Z","iopub.execute_input":"2025-08-26T19:02:49.236113Z","iopub.status.idle":"2025-08-26T19:02:49.244091Z","shell.execute_reply.started":"2025-08-26T19:02:49.236088Z","shell.execute_reply":"2025-08-26T19:02:49.243096Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"910.3237069928716"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"lr.predict([[44.5,39.3,45.1]])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.648524Z","iopub.execute_input":"2025-08-26T18:53:08.648772Z","iopub.status.idle":"2025-08-26T18:53:08.667095Z","shell.execute_reply.started":"2025-08-26T18:53:08.648755Z","shell.execute_reply":"2025-08-26T18:53:08.665688Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"array([11.45108843])"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"import joblib\njoblib.dump(lr,\"my_model.pk1\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-08-26T18:53:08.668150Z","iopub.execute_input":"2025-08-26T18:53:08.668457Z","iopub.status.idle":"2025-08-26T18:53:08.682565Z","shell.execute_reply.started":"2025-08-26T18:53:08.668430Z","shell.execute_reply":"2025-08-26T18:53:08.681756Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"['my_model.pk1']"},"metadata":{}}],"execution_count":11}]}